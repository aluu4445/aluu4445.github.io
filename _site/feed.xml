<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-06-08T11:42:42+10:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Andy Luu</title><subtitle></subtitle><entry><title type="html">Detours part 1</title><link href="http://localhost:4000/learning/cs/2020/05/31/A-few-detours.html" rel="alternate" type="text/html" title="Detours part 1" /><published>2020-05-31T17:19:03+10:00</published><updated>2020-05-31T17:19:03+10:00</updated><id>http://localhost:4000/learning/cs/2020/05/31/A-few-detours</id><content type="html" xml:base="http://localhost:4000/learning/cs/2020/05/31/A-few-detours.html">&lt;p&gt;I definitely wanted to get through this course as quickly as I could - but I was also pretty open to swapping out courses or learning extra content. I wasn’t aiming for any particular job in CS so I felt having a wider set of skills was a good idea too.&lt;/p&gt;

&lt;h1 id=&quot;collaborating-on-github&quot;&gt;Collaborating on Github&lt;/h1&gt;
&lt;p&gt;Around the time I finished the basic courses mentioned in &lt;a href=&quot;https://andyluu.com/jekyll/update/2020/05/31/learning-the-basics.html&quot;&gt;my previous post&lt;/a&gt; my partner suggested that I try making some code changes to an online pictionary project on Github that she had helped put together for an assignment in university. It was a bit of a detour from my plan of getting through the OSSU course but it was definitely a great opportunity to get more familiar with the development loop on Github and collaborating with other people.&lt;/p&gt;

&lt;p&gt;As preparation I completed the &lt;a href=&quot;https://www.codecademy.com/learn/introduction-to-javascript&quot;&gt;Codecademy course on JavaScript&lt;/a&gt; which was a good introduction but it was pretty limited help for working with more advanced code. I think the beginner Codecademy courses on coding is quite beginner-friendly, easy to understand, and interactive, but I compare it a conveyor belt where you never get to stray too far from a pre-determined path. In the end with a lot of guidance and a lot of googling on Angular I managed to fix an issue with mobile scrolling and half-complete an implementation of JavaScript fireworks.&lt;/p&gt;

&lt;h1 id=&quot;dabbling-in-front-end-development&quot;&gt;Dabbling in front-end development&lt;/h1&gt;
&lt;p&gt;Following up on the basic JavaScript course I did, I decided to complete &lt;a href=&quot;https://www.internetingishard.com/html-and-css/&quot;&gt;Interneting is Hard&lt;/a&gt;, an online tutorial on HTML &amp;amp; CSS for beginners. I would &lt;strong&gt;definitely recommend&lt;/strong&gt; this for anyone looking for an introduction into HTML &amp;amp; CSS:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;There are great diagrams that clearly illustrate the concepts&lt;/li&gt;
  &lt;li&gt;Tutorials are really easy to follow along and verify that you’re doing the right thing so far&lt;/li&gt;
  &lt;li&gt;There are great links to external resources and further reading&lt;/li&gt;
  &lt;li&gt;The biggest downside was the limited depth of the course - I would definitely try and follow up the course content with some separate practice in applying the concepts taught&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my case, I decided to start working on a personal website to practice writing HTML and CSS. As of writing this post I haven’t gone too deeply into this but hopefully by the time you’re reading this these posts will be up on what I end up making!&lt;/p&gt;

&lt;h1 id=&quot;challenging-myself-with-leetcode&quot;&gt;Challenging myself with Leetcode&lt;/h1&gt;
&lt;p&gt;As April 2020 came I also decided to attempt the April 2020 &lt;a href=&quot;https://leetcode.com/&quot;&gt;Leetcode&lt;/a&gt; 30-day-challenge which involved doing a daily problem that increased in difficulty throughout the month. My partner had been studying in preparation for interviews and we decided to do the challenge together. I didn’t expect to be able to do all the problems but at the very least I had someone to discuss them with.&lt;/p&gt;

&lt;p&gt;After breezing through first half I struggled to complete anything in the middle and practically gave up for the final week of problems. While generally teaching me to think outside the box and plan out my code before diving too deeply in, I also got to get some experience with some newly learned data structures like union-find and binary search trees. I’d like to go back and do some occasional medium difficulty problems once I have better knowledge about Data Structures and Algorithms.&lt;/p&gt;</content><author><name></name></author><summary type="html">I definitely wanted to get through this course as quickly as I could - but I was also pretty open to swapping out courses or learning extra content. I wasn’t aiming for any particular job in CS so I felt having a wider set of skills was a good idea too.</summary></entry><entry><title type="html">Learning the Basics</title><link href="http://localhost:4000/jekyll/update/2020/05/31/learning-the-basics.html" rel="alternate" type="text/html" title="Learning the Basics" /><published>2020-05-31T17:19:03+10:00</published><updated>2020-05-31T17:19:03+10:00</updated><id>http://localhost:4000/jekyll/update/2020/05/31/learning-the-basics</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/05/31/learning-the-basics.html">&lt;h1 id=&quot;before-i-started&quot;&gt;Before I started&lt;/h1&gt;
&lt;p&gt;I wasn’t quite completely new to programming - I learnt MATLAB as part of Civil Engineering degree and I had dabbled in Python in the past. Back in mid-2019 when I was still considering whether it was a path I wanted to go down, I decided to try and learn Python more seriously. At first I dabbled in &lt;a href=&quot;https://learncodethehardway.org/python/&quot;&gt;Learn Python the Hard Way&lt;/a&gt; but I ditched it when I reached the paywall and picked up &lt;a href=&quot;https://automatetheboringstuff.com/chapter1/&quot;&gt;Automate the Boring Stuff&lt;/a&gt; instead. The idea of learning basic Python while also learning tools that I could potentially apply even in my own work was pretty appealing, but in hindsight I wouldn’t really recommend it as a resource to most people. The content is a little too verbose and there isn’t really enough interactivity - it’s pretty much a textbook after all. I would instead recommended Codecademy’s &lt;a href=&quot;https://www.codecademy.com/learn/learn-python-3&quot;&gt;Learn Python 3&lt;/a&gt; for complete beginners or EdX’s &lt;a href=&quot;https://www.edx.org/course/introduction-to-computer-science-and-programming-7&quot;&gt;Introduction to Computer Science and Programming using Python&lt;/a&gt; if you are more familiar with programming.&lt;/p&gt;

&lt;h1 id=&quot;cutting-out-the-fat&quot;&gt;Cutting out the fat&lt;/h1&gt;
&lt;p&gt;The OSSU course suggests a minimum duration of about 2 years but I thought there might be a bit of overlap with my civil engineering background. I tried out some of the math courses but decided I was familiar enough with the concepts and from asking friends in the industry it didn’t seem like math was used all too much anyway. I watched the first two modules of MIT’s &lt;a href=&quot;https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/index.htm&quot;&gt;Mathematics for Computer Science&lt;/a&gt; but the course was pretty low quality and the content seemed too mathematical / theoretical and I dropped it halfway. I Also skipped the Introduction to Programming section of the curriculum (Python for Everyone / Fundamentals of Computing) as I was already familiar with basic coding and Python. Instead I looked through the introduction to Python course (mentioned above) and decided to finish the sections on my weaker areas i.e. recursion and classes.&lt;/p&gt;

&lt;h1 id=&quot;learning-the-basics&quot;&gt;Learning the basics&lt;/h1&gt;
&lt;p&gt;I would consider the three courses below the ‘basics’ and they took me about 2 months to complete (January and February 2020).&lt;/p&gt;
&lt;h2 id=&quot;cs50-introduction-to-computer-science&quot;&gt;&lt;a href=&quot;https://www.edx.org/course/cs50s-introduction-to-computer-science#!&quot;&gt;CS50 Introduction to Computer Science&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I would &lt;strong&gt;definitely recommend&lt;/strong&gt; this was a really great course for providing an introduction to Computer Science. I would recommend even just the first lecture to anyone remotely interested in learning how to code and I’ve even shared it with a few friends in this position.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;David Malan is an amazing lecturer&lt;/li&gt;
  &lt;li&gt;The online platform for the course content is really high quality and completely free - there’s even an inbuilt IDE and you can get really good feedback on the correctness and style of your submissions&lt;/li&gt;
  &lt;li&gt;Most exercises included both an easy and hard version of the problem - I was able to do the hardest versions of every exercise but some of them were quite time consuming&lt;/li&gt;
  &lt;li&gt;Starting with Scratch was really good but I think learning C could be a difficult experience for the average student even though I appreciate that it allowed the course to teach lower level concepts like memory allocation and pointers&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to-code-simple-data&quot;&gt;&lt;a href=&quot;https://www.edx.org/course/how-to-code-simple-data&quot;&gt;How to Code: Simple Data&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I would &lt;strong&gt;recommend&lt;/strong&gt; this course for something getting started with learning CS but not as a first course, but I think you could find alternative courses to cover the concepts too.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;I didn’t really understand the value of going back and learning a functional language like Racket but as I got further through the course I could appreciate more how it was used to explain some fundamental concepts like function design, testing and recursion&lt;/li&gt;
  &lt;li&gt;The exercises seemed very tedious at first and it felt like a lot of it was copying and pasting templates and following a formula&lt;/li&gt;
  &lt;li&gt;Minor exercises between lecture content was behind a paywall but I don’t think I missed out on that much&lt;/li&gt;
  &lt;li&gt;I enjoyed how the final exercises pulled together&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to-code-complex-data&quot;&gt;&lt;a href=&quot;https://www.edx.org/course/how-to-code-complex-data&quot;&gt;How to Code: Complex Data&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I would &lt;strong&gt;definitely recommend&lt;/strong&gt; this course to anyone who finished the Simple Data course - it’s pretty much just a continuation into more advanced topics.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;I appreciated the shift away from templating for sake of it and more to guide the process&lt;/li&gt;
  &lt;li&gt;It was a good early introduction to some more complicated concepts like generative recursion, backtracking search, DFS, BFS, tail recursion, graphs and merge sort&lt;/li&gt;
  &lt;li&gt;Exam was behind a paywall which sucks but exercises towards the end got quite a bit harder and more time consuming anyway (but doable for a student that’s been studiously following along)&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Before I started I wasn’t quite completely new to programming - I learnt MATLAB as part of Civil Engineering degree and I had dabbled in Python in the past. Back in mid-2019 when I was still considering whether it was a path I wanted to go down, I decided to try and learn Python more seriously. At first I dabbled in Learn Python the Hard Way but I ditched it when I reached the paywall and picked up Automate the Boring Stuff instead. The idea of learning basic Python while also learning tools that I could potentially apply even in my own work was pretty appealing, but in hindsight I wouldn’t really recommend it as a resource to most people. The content is a little too verbose and there isn’t really enough interactivity - it’s pretty much a textbook after all. I would instead recommended Codecademy’s Learn Python 3 for complete beginners or EdX’s Introduction to Computer Science and Programming using Python if you are more familiar with programming.</summary></entry><entry><title type="html">Teaching myself how to code</title><link href="http://localhost:4000/learning/cs/2020/05/24/teaching-myself-how-to-code.html" rel="alternate" type="text/html" title="Teaching myself how to code" /><published>2020-05-24T20:43:03+10:00</published><updated>2020-05-24T20:43:03+10:00</updated><id>http://localhost:4000/learning/cs/2020/05/24/teaching-myself-how-to-code</id><content type="html" xml:base="http://localhost:4000/learning/cs/2020/05/24/teaching-myself-how-to-code.html">&lt;p&gt;After studying as a Civil Engineer and working as Project Manager for four years, I decided late 2019 that it was time for a career change and I wanted to work in Computer Science. I started this journey of teaching myself how to code properly at the start of 2020 with the plan to work full-time and spend my spare time self-studying to the point where I could switch careers within 1-2 years.&lt;/p&gt;

&lt;p&gt;After looking at a variety of options, I ultimately decided on following &lt;a href=&quot;https://github.com/ossu/computer-science&quot;&gt;the OSSU curriculum&lt;/a&gt;, a curated set of online courses that’s been designed to provide essentially the same education as an undergraduate computer science degree.&lt;/p&gt;

&lt;p&gt;Throughout the journey I’ve also studied some additional resources like:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.internetingishard.com/html-and-css/&quot;&gt;Interneting is Hard&lt;/a&gt; - a beginner course on HTML and CSS&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://missing.csail.mit.edu/&quot;&gt;The Missing Semester of Your CS Education&lt;/a&gt; - a course on topics typically not covered like Shell tools, Vim, Version Control, Profiling etc.&lt;/li&gt;
  &lt;li&gt;The Codecademy courses on &lt;a href=&quot;https://www.codecademy.com/learn/learn-java&quot;&gt;Java&lt;/a&gt; and &lt;a href=&quot;https://www.codecademy.com/learn/introduction-to-javascript&quot;&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;An &lt;a href=&quot;https://java-programming.mooc.fi/part-1/1-starting-programming&quot;&gt;extra course on Java&lt;/a&gt; so I could take the Princeton Algorithms course&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://refrf.shreyasminocha.me/&quot;&gt;Regular Expressions for Regular Folk&lt;/a&gt; - a great online resource for learning Regex&lt;/li&gt;
  &lt;li&gt;I had a go at the 30-day Leetcode challenge in April 2020&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Having learnt the basics of HTML, CSS and JavaScript, I decided to set up this personal website to practice these skills and also publicly document my progress. If you’re reading this, hopefully you’ll find my journey interesting and maybe even helpful!&lt;/p&gt;</content><author><name></name></author><summary type="html">After studying as a Civil Engineer and working as Project Manager for four years, I decided late 2019 that it was time for a career change and I wanted to work in Computer Science. I started this journey of teaching myself how to code properly at the start of 2020 with the plan to work full-time and spend my spare time self-studying to the point where I could switch careers within 1-2 years.</summary></entry></feed>